import os
import re
import sys
import time
import datetime
import csv
from htd_databse_managment import *


class htd_indicator_gen(object):
    def __init__(self):
        self.csvfile = open('htd_statistics.csv', 'rb')
        self.database = HTD_DB_MANAGMENT()
        self.delimiter = ","
        self.csvreader = csv.DictReader(self.csvfile, delimiter=self.delimiter)
        self.status_suppport = ["HVM", "Injection", "PlaceHolder", "Unknown"]
        self.argument_name = "action_status"
        self.data = {"HVM": 0, 'Injection': 0, "PlaceHolder": 0, 'Unknown': 0}

        description = "The htd_indicator_gen class manages all the statistics generated by PACMAN, store it in a local database and then create grahps to understand the current status of the HTD Flows"
        author = "lmoraseg"

    def check_before_start(self): pass

    def get_data_from_csv(self):
        for row in self.csvreader:
            if row[self.argument_name] in list(self.data.keys()):
                self.data[row[self.argument_name]] = self.data[row[self.argument_name]] + 1
            else:
                print("Warning not supportable value ")
        self.csvfile.close()

    def load_data_to_db(self):
        self.database.data_entry(os.environ["HTD_TRAIN"].upper(), os.environ["HTD_PROJ"].upper(),
                                 os.environ["HTD_PROJ_STEP"].upper(), "HVM_HEALTHINESS", str(self.data))

    def create_html_result(self):
        self.database.create_index_html(os.environ["HTD_TRAIN"].upper(), os.environ["HTD_PROJ"].upper(),
                                        os.environ["HTD_PROJ_STEP"].upper(), "HVM_HEALTHINESS")

    def run(self):
        self.check_before_start()
        self.get_data_from_csv()
        self.load_data_to_db()
        self.create_html_result()
